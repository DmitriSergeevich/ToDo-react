{"version":3,"sources":["components/AddItem/index.js","components/AddItem/AddItem.js","components/ItemStatusFilter/index.js","components/ItemStatusFilter/ItemStatusFilter.js","components/PageHeader/index.js","components/PageHeader/PageHeader.js","components/SearchInput/index.js","components/SearchInput/SearchInput.js","components/ToDoListItem/index.js","components/ToDoListItem/ToDoListItem.js","components/TodoList/index.js","components/TodoList/TodoList.js","components/App/index.js","components/App/App.js","index.js"],"names":["AddItem","state","label","onChange","e","setState","target","value","onSubmit","preventDefault","addItems","props","className","this","type","placeholder","id","onClick","React","Component","ItemStatusFilter","buttonsStyle","All","Active","Done","filterButtonHandler","curButton","innerHTML","newButtonsStyle","key","changeFilterProp","PageHeader","toDo","done","SearchInput","term","toSearch","ToDoListItem","onDeleted","onToggleImportant","onToggleDone","itemStyle","important","TodoList","todos","elements","map","elem","elemProp","App","maxId","createItem","text","listItems","filter","deleteItem","item","addNewItem","arr","push","updateTogleElement","prop","forEach","el","filterProperty","tofilterItems","items","length","toLowerCase","indexOf","str","filterOfStatus","status","visibleItems","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d0bf3e2.chunk.js","sourcesContent":["import AddItem from \"./AddItem\";\n\nexport default AddItem;","import React from 'react';\nimport \"./AddItem.css\"\n\nexport default class AddItem extends React.Component {\n  \n  state = {\n    label: '',\n  }\n  \n  onChange = (e) => {\n    this.setState({ label: e.target.value })\n  }\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { addItems } = this.props;    \n    addItems(this.state.label)\n    this.setState({ label: '' })\n  }\n  render() {\n    return (\n      <form className=\"addItem top-panel\"\n            onSubmit={ this.onSubmit }>\n        <input type=\"text\"\n              className=\"form-control search-input\"\n              placeholder=\"Type new task\"\n              id=\"add-item\"\n              onChange={ this.onChange }\n              value={ this.state.label }>         \n        </input>\n        <button type=\"button\"\n          className=\"btn btn-info\"\n          onClick={ this.onSubmit }>\n          Add new task\n        </button>\n      </form>\n    )\n  };\n}","import ItemStatusFilter from \"./ItemStatusFilter\";\n\nexport default ItemStatusFilter;","import React, { Component } from 'react';\n\nexport default class ItemStatusFilter extends Component {\n  \n  state = {\n    buttonsStyle : {\n      All: 'btn btn-info',\n      Active: 'btn outline-secondary',\n      Done: 'btn outline-secondary'\n    }\n  }\n\n  filterButtonHandler = (e) => {\n    const curButton = e.target.innerHTML; \n    this.setState(({ buttonsStyle }) => {           \n      const newButtonsStyle = {...buttonsStyle};      \n      for (const key in newButtonsStyle) {\n        newButtonsStyle[key] = 'btn outline-secondary';\n      }\n      newButtonsStyle[curButton] = 'btn btn-info';\n      return {\n        buttonsStyle: newButtonsStyle,\n      } \n    })\n    const { changeFilterProp } = this.props;\n    changeFilterProp(curButton);\n  }\n\n  render() {\n\n    return (\n      <div className=\"btn-group\">\n        <button type=\"button\" className={this.state.buttonsStyle.All}\n                              onClick={this.filterButtonHandler}>All</button>\n        <button type=\"button\" className={this.state.buttonsStyle.Active}\n                              onClick={this.filterButtonHandler}>Active</button>\n        <button type=\"button\" className={this.state.buttonsStyle.Done}\n                              onClick={this.filterButtonHandler}>Done</button>\n      </div>\n    );\n  }\n}","import { PageHeader } from \"./PageHeader\";\n\nexport default PageHeader;","import React from 'react';\nimport './PageHeader.css';\n\nexport const PageHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};","import SearchInput from \"./SearchInput\";\n\nexport default SearchInput;","import React from 'react';\nimport './SearchInput.css'\n\n\n\nexport default class SearchInput extends React.Component {\n  \n  state = {\n    term: '',\n  }\n\n  onChange = (e) => {\n    const term = e.target.value;\n    this.setState({ term })\n    this.props.toSearch(term)\n  }\n\n  render() {\n    return (<input type=\"text\"\n              className=\"form-control search-input\"\n              placeholder=\"type to search\"\n              value={this.state.term}\n              onChange={ this.onChange } />)\n  };\n};","import ToDoListItem from \"./ToDoListItem\";\n\nexport default ToDoListItem;","import React from 'react';\n\nimport './ToDoListItem.css'\n\nexport default class ToDoListItem extends React.Component {  \n  \n  render() {\n    const { label, onDeleted, onToggleImportant, onToggleDone, done, important } = this.props;\n    \n    let itemStyle = \"todo-list-item\";\n    \n    if (done) {\n      itemStyle += ' done';\n    }\n    if (important) {\n      itemStyle += ' important';\n    }\n\n    return (\n      <span className={ itemStyle }>\n        <span \n          className=\"todo-list-item-label\"\n          onClick={ onToggleDone }>\n            { label }\n          \n        </span>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-success btn-sm float-right\"\n                onClick={ onToggleImportant }>\n          <i className=\"fa fa-exclamation\" />\n        </button>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-danger btn-sm float-right\"\n                onClick={ onDeleted }>\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    \n    );\n  }\n}\n","import { TodoList } from \"./TodoList\";\n\nexport default TodoList;","import React from 'react';\nimport './TodoList.css'\nimport ToDoListItem from '../ToDoListItem';\n\nexport const TodoList = ({ todos, onDeleted, onToggleDone, onToggleImportant }) => {  \n  const elements = todos.map(elem => {\n    const {id, ...elemProp} = elem;\n    return (\n    <li key={ id } className=\"list-group-item\">\n      < ToDoListItem \n        { ...elemProp }\n        onDeleted={()=> onDeleted(id)}\n        onToggleDone={()=> onToggleDone(id)}\n        onToggleImportant={()=> onToggleImportant(id)}\n      />\n    </li>\n    )\n  })\n  return <ul className=\"list-group todo-list\"> { elements } </ul>;\n}\n","import App from \"./App\";\n\nexport default App;","import React from 'react';\nimport AddItem from '../AddItem';\nimport ItemStatusFilter from '../ItemStatusFilter';\nimport PageHeader from '../PageHeader';\nimport SearchInput from '../SearchInput';\nimport TodoList from '../TodoList';\nimport './App.css';\n\nexport default class App extends React.Component {\n\n  maxId = 100;\n\n  createItem = (text) => {\n    return {\n      label: text,\n      id: this.maxId++,\n      important: false,\n      done: false,      \n    }\n  }\n\n  state = {\n    listItems: [\n      this.createItem('Drink coffee'),\n      this.createItem('Lerning react'),\n      this.createItem('To pee'),\n    ],\n    term : '',\n    filter: 'All',\n  };  \n\n  deleteItem = (id) => {\n    this.setState(({ listItems }) => {\n      const arr = listItems.filter((item) => {\n        return item.id !== id && item;\n      })\n      return {\n        listItems: arr,\n      };\n    });\n  };\n  \n  addNewItem = (text) => {\n    \n    this.setState(({ listItems }) => {\n      let arr = [...listItems];\n      arr.push(this.createItem(text))\n      return {\n        listItems: arr,\n      }\n      }\n      \n    )\n  }\n  \n  updateTogleElement = (prop, id) => {\n    this.setState(({ listItems }) => {\n      const arr = [...listItems];\n      arr.forEach(el => {\n        if (el.id === id) {\n          el[prop] = !el[prop]\n        }\n      })\n      return {\n        listItems: arr,\n      }\n    })\n  }\n\n  onToggleDone = (id) => {\n    this.updateTogleElement('done', id)\n  }\n\n  onToggleImportant = (id) => {\n    this.updateTogleElement('important', id)\n  }\n\n  changeFilterProp = (filterProperty) => {\n    this.setState({ filter: filterProperty })\n  }\n  \n  tofilterItems = (items, term) => {\n    if (term.length === 0) {\n      return items;\n    }\n    return items.filter((item) => {      \n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\n    })    \n  }\n\n  toSearch = (str) => {    \n    this.setState({ term: str });\n  }\n\n  filterOfStatus = (items, status) => {    \n    switch(status) {\n      case 'Done': return items.filter((item) => item.done);  \n      case 'Active': return items.filter((item) => !item.done);     \n      default: return items;\n    }  \n  }\n\n  render() {\n    const { listItems, term, filter } = this.state;\n    const visibleItems = this.filterOfStatus(this.tofilterItems(listItems, term), filter);\n    \n    const doneCount = this.state.listItems.filter((el) => el.done === true && el ).length;  \n    const todoCount = this.state.listItems.length - doneCount;\n    return (\n      <div className=\"todo-app\">      \n        <PageHeader toDo={todoCount} done={doneCount}/>\n        <div className=\"top-panel d-flex\">\n          <SearchInput toSearch={ this.toSearch }/>\n          <ItemStatusFilter changeFilterProp={this.changeFilterProp}/>\n        </div>\n        \n        <TodoList todos={ visibleItems }\n                  onDeleted={ this.deleteItem }\n                  onToggleDone={ this.onToggleDone }\n                  onToggleImportant={ this.onToggleImportant }/>\n        <AddItem addItems={ this.addNewItem }/>\n      </div>\n    )\n  }  \n}","import ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}